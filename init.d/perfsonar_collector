#!/usr/bin/perl

# chkconfig: 2345 20 80
# description: perfsonar collector startup script

#--------------------------------------------------------------------
#----- perfsonar_collector - Init Script
#-----
#----- Copyright(C) 2015 The Trustees of Indiana University
#--------------------------------------------------------------------
#----- $LastChangedBy: $
#----- $LastChangedRevision: $
#----- $LastChangedDate: $
#----- $HeadURL: $
#----- $Id: $
#-----
#----- This is a chkconfig-aware init script used to start, stop,
#----- or restart the perfsonar_collector daemon.
#--------------------------------------------------------------------

use strict;
use warnings;

use constant PID_FILE => '/var/run/perfsonar-collector.pid';
use constant CONFIG_FILE => '/etc/grnoc/perfsonar-collector/config.xml';

use Data::Dumper;

my $option = $ARGV[0];

usage() if ( !defined( $option ) );

# handle stop
if ( $option eq "stop" ) {

    stop();
}

# handle start
elsif ( $option eq "start" ) {

    start();
}

# handle restart
elsif ( $option eq "restart" ) {

    stop();
    start();
}

# handle reload
elsif ( $option eq "reload" ) {

    reload();
}

else {

    usage();
}

sub stop {

    if ( ! -e PID_FILE ) {

        print "PID file " . PID_FILE . " not found!\n";
        return;
    }

    # determine pid from pid file
    open( my $fh, PID_FILE );
    my $pid = <$fh>;
    close( $fh );

    # send TERM to the process
    `kill $pid` if ( defined( $pid ) );
    unlink( PID_FILE );
}

sub start {

    # make sure no perfsonar_collector processes exist
    if ( -e PID_FILE ) {

        print "PID file " . PID_FILE . " still exists!\n";
        return;
    }

    my $cmd = '/usr/sbin/perfsonar_collector --config ' . CONFIG_FILE;

    `$cmd`;
}

sub reload {

    if ( ! -e PID_FILE ) {

        print "PID file " . PID_FILE . " not found!\n";
        return;
    }

    # determine pid from pid file
    open( my $fh, PID_FILE );
    my $pid = <$fh>;
    close( $fh );

    # send HUP to the process
    `kill -1 $pid` if ( defined( $pid ) );
}

sub usage {

    print "Usage: $0 [start|stop|restart|reload]\n";
    exit( 1 );
}
